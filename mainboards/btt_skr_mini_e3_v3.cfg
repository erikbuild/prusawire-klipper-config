[temperature_sensor SKR_Mini]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 80

[heater_bed]
heater_pin: PC9
sensor_type: Generic 3950
sensor_pin: PC4
min_temp: 0
max_temp: 120

[stepper_x]
microsteps: 16
full_steps_per_rotation: 200
rotation_distance: 40
# If you're using stock MK3/MK4 timing pulleys (16 teeth) for
# your belts, you need to change rotation_distance to 32 here 
# and do the same for stepper_y and stepper_z
step_pin: PB13
dir_pin: PB12
enable_pin: !PB14
endstop_pin: tmc2209_stepper_x:virtual_endstop
position_endstop: 0
position_max: 250
homing_speed: 40
homing_retract_dist: 0

[tmc2209 stepper_x]
run_current: .5
diag_pin: ^PC0
uart_address: 0
uart_pin: PC11
tx_pin: PC10
driver_SGTHRS: 135

[stepper_y]
microsteps: 16
full_steps_per_rotation: 200
rotation_distance: 40
step_pin: PB10
dir_pin: PB2
enable_pin: !PB11
endstop_pin: tmc2209_stepper_y:virtual_endstop
position_endstop: -33
position_max: 210
position_min: -33
homing_speed: 40
homing_retract_dist: 0

[tmc2209 stepper_y]
run_current: .5
diag_pin: ^PC1
uart_address: 2
uart_pin: PC11
tx_pin: PC10
driver_SGTHRS: 135

[stepper_z]
microsteps: 16
full_steps_per_rotation: 200
rotation_distance: 40
step_pin: PB0
dir_pin: PC5
enable_pin: !PB1
position_max: 183
position_min: -5
homing_speed: 35

# When not running a probe, bump the top of the frame for homing
#endstop_pin: tmc2209_stepper_z:virtual_endstop
#position_endstop: 183

[tmc2209 stepper_z]
run_current: .5
diag_pin: ^PC2
uart_address: 1
uart_pin: PC11
tx_pin: PC10
driver_SGTHRS: 135

[static_digital_output status_led]
pins: PD8

[homing_override]
axes: xyz
gcode:
  {% set home_all = 'X' not in params and 'Y' not in params and 'Z' not in params %}

  {% if 'x' not in printer.toolhead.homed_axes or 'y' not in printer.toolhead.homed_axes %}
    SET_KINEMATIC_POSITION Z=1 SET_HOMED=Z
    G1 Z10 F1200
  {% endif %}

  {% if home_all or 'X' in params %}
    SET_KINEMATIC_POSITION X=0
    _HOME_X
  {% endif %}

  {% if home_all or 'Y' in params %}
    SET_KINEMATIC_POSITION Y=0
    _HOME_Y
  {% endif %}

  {% if home_all or 'Z' in params %}
    SET_KINEMATIC_POSITION Z=0
    G90
    CENTER
    G91
    G28 Z
    G91
    G0 Z10
  {% endif %}
  
[gcode_macro _HOME_X]
gcode:
    # Always use consistent run_current on A/B steppers during sensorless homing
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
    {% set HOME_CURRENT_X = RUN_CURRENT_X / 2 %}
    {% set HOME_CURRENT_Y = RUN_CURRENT_Y / 2 %}
    
    SET_KINEMATIC_POSITION X=0 SET_HOMED=X
    G1 X10 F1200
    
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT_Y}

    # Home
    G28 X
    # Move away
    G91
    G1 X5 F1200
    
    # Wait just a second (give StallGuard registers time to clear)
    G4 P250
    
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}

[gcode_macro _HOME_Y]
gcode:
    # Set current for sensorless homing
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
    {% set HOME_CURRENT_X = RUN_CURRENT_X / 2 %}
    {% set HOME_CURRENT_Y = RUN_CURRENT_Y / 2 %}
    
    SET_KINEMATIC_POSITION Y=0 SET_HOMED=Y
    G1 Y10 F1200
    
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT_Y}

    # Home
    G28 Y
    # Move away
    G91
    G1 Y5 F1200

    # Wait just a second (give StallGuard registers time to clear)
    G4 P250
    
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}
